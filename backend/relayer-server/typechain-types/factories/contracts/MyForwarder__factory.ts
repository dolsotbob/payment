/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MyForwarder,
  MyForwarderInterface,
} from "../../contracts/MyForwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct MyForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct MyForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600b81526020017f4d79466f72776172646572000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001620000c595949392919062000163565b6040516020818303038152906040528051906020012060808181525050620001c0565b6000819050919050565b620000fd81620000e8565b82525050565b6000819050919050565b620001188162000103565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200014b826200011e565b9050919050565b6200015d816200013e565b82525050565b600060a0820190506200017a6000830188620000f2565b620001896020830187620000f2565b620001986040830186620000f2565b620001a760608301856200010d565b620001b6608083018462000152565b9695505050505050565b608051611007620001dc600039600061039501526110076000f3fe6080604052600436106100345760003560e01c806367b6ee8a146100395780637ecebe0014610069578063f28313e0146100a6575b600080fd5b610053600480360381019061004e919061088b565b6100e3565b6040516100609190610997565b60405180910390f35b34801561007557600080fd5b50610090600480360381019061008b9190610a17565b6102b8565b60405161009d9190610a5d565b60405180910390f35b3480156100b257600080fd5b506100cd60048036038101906100c8919061088b565b6102d0565b6040516100da9190610a93565b60405180910390f35b60606100f08484846102d0565b61012f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012690610b0b565b60405180910390fd5b60016000808660000160208101906101479190610a17565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101909190610b5a565b925050819055506000848060a001906101a99190610b9d565b8660000160208101906101bc9190610a17565b6040516020016101ce93929190610c87565b60405160208183030381529060405290506000808660200160208101906101f59190610a17565b73ffffffffffffffffffffffffffffffffffffffff1687606001358860400135856040516102239190610ce2565b600060405180830381858888f193505050503d8060008114610261576040519150601f19603f3d011682016040523d82523d6000602084013e610266565b606091505b5091509150816102ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a290610d45565b60405180910390fd5b8093505050509392505050565b60006020528060005260406000206000915090505481565b6000807f791697d8ed5668ef0c144142e880c3f470cc17e05e4b3eb3392697050b16d2058560000160208101906103079190610a17565b86602001602081019061031a9190610a17565b876040013588606001358960800160208101906103379190610da3565b8a8060a001906103479190610b9d565b604051610355929190610dd0565b60405180910390208b60c00135604051602001610379989796959493929190610e20565b60405160208183030381529060405280519060200120905060007f0000000000000000000000000000000000000000000000000000000000000000826040516020016103c6929190610eea565b60405160208183030381529060405280519060200120905060006103eb8287876104bf565b90508660000160208101906104009190610a17565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614801561048d57508660c001356000808960000160208101906104509190610a17565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b80156104b357508660800160208101906104a79190610da3565b65ffffffffffff164211155b93505050509392505050565b600061050f8484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610518565b90509392505050565b6000806000806105288686610544565b92509250925061053882826105a0565b82935050505092915050565b600080600060418451036105895760008060006020870151925060408701519150606087015160001a905061057b88828585610704565b955095509550505050610599565b60006002855160001b9250925092505b9250925092565b600060038111156105b4576105b3610f26565b5b8260038111156105c7576105c6610f26565b5b031561070057600160038111156105e1576105e0610f26565b5b8260038111156105f4576105f3610f26565b5b0361062b576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561063f5761063e610f26565b5b82600381111561065257610651610f26565b5b03610697578060001c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161068e9190610a5d565b60405180910390fd5b6003808111156106aa576106a9610f26565b5b8260038111156106bd576106bc610f26565b5b036106ff57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016106f69190610f55565b60405180910390fd5b5b5050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156107445760006003859250925092506107ee565b6000600188888888604051600081526020016040526040516107699493929190610f8c565b6020604051602081039080840390855afa15801561078b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107df57600060016000801b935093509350506107ee565b8060008060001b935093509350505b9450945094915050565b600080fd5b600080fd5b600080fd5b600060e0828403121561081d5761081c610802565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261084b5761084a610826565b5b8235905067ffffffffffffffff8111156108685761086761082b565b5b60208301915083600182028301111561088457610883610830565b5b9250929050565b6000806000604084860312156108a4576108a36107f8565b5b600084013567ffffffffffffffff8111156108c2576108c16107fd565b5b6108ce86828701610807565b935050602084013567ffffffffffffffff8111156108ef576108ee6107fd565b5b6108fb86828701610835565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610941578082015181840152602081019050610926565b60008484015250505050565b6000601f19601f8301169050919050565b600061096982610907565b6109738185610912565b9350610983818560208601610923565b61098c8161094d565b840191505092915050565b600060208201905081810360008301526109b1818461095e565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109e4826109b9565b9050919050565b6109f4816109d9565b81146109ff57600080fd5b50565b600081359050610a11816109eb565b92915050565b600060208284031215610a2d57610a2c6107f8565b5b6000610a3b84828501610a02565b91505092915050565b6000819050919050565b610a5781610a44565b82525050565b6000602082019050610a726000830184610a4e565b92915050565b60008115159050919050565b610a8d81610a78565b82525050565b6000602082019050610aa86000830184610a84565b92915050565b600082825260208201905092915050565b7f496e76616c6964207369676e6174757265206f72206e6f6e6365000000000000600082015250565b6000610af5601a83610aae565b9150610b0082610abf565b602082019050919050565b60006020820190508181036000830152610b2481610ae8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b6582610a44565b9150610b7083610a44565b9250828201905080821115610b8857610b87610b2b565b5b92915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112610bba57610bb9610b8e565b5b80840192508235915067ffffffffffffffff821115610bdc57610bdb610b93565b5b602083019250600182023603831315610bf857610bf7610b98565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000610c268385610c00565b9350610c33838584610c0b565b82840190509392505050565b60008160601b9050919050565b6000610c5782610c3f565b9050919050565b6000610c6982610c4c565b9050919050565b610c81610c7c826109d9565b610c5e565b82525050565b6000610c94828587610c1a565b9150610ca08284610c70565b601482019150819050949350505050565b6000610cbc82610907565b610cc68185610c00565b9350610cd6818560208601610923565b80840191505092915050565b6000610cee8284610cb1565b915081905092915050565b7f5461726765742063616c6c206661696c65640000000000000000000000000000600082015250565b6000610d2f601283610aae565b9150610d3a82610cf9565b602082019050919050565b60006020820190508181036000830152610d5e81610d22565b9050919050565b600065ffffffffffff82169050919050565b610d8081610d65565b8114610d8b57600080fd5b50565b600081359050610d9d81610d77565b92915050565b600060208284031215610db957610db86107f8565b5b6000610dc784828501610d8e565b91505092915050565b6000610ddd828486610c1a565b91508190509392505050565b6000819050919050565b610dfc81610de9565b82525050565b610e0b816109d9565b82525050565b610e1a81610d65565b82525050565b600061010082019050610e36600083018b610df3565b610e43602083018a610e02565b610e506040830189610e02565b610e5d6060830188610a4e565b610e6a6080830187610a4e565b610e7760a0830186610e11565b610e8460c0830185610df3565b610e9160e0830184610a4e565b9998505050505050505050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000610ed4600283610aae565b9150610edf82610e9e565b602082019050919050565b60006060820190508181036000830152610f0381610ec7565b9050610f126020830185610df3565b610f1f6040830184610df3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000602082019050610f6a6000830184610df3565b92915050565b600060ff82169050919050565b610f8681610f70565b82525050565b6000608082019050610fa16000830187610df3565b610fae6020830186610f7d565b610fbb6040830185610df3565b610fc86060830184610df3565b9594505050505056fea26469706673582212209b58d6372bd9d5aea114d5ad130016764240eb11d4aed5e45a1caefda53caadf64736f6c63430008140033";

type MyForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyForwarder__factory extends ContractFactory {
  constructor(...args: MyForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyForwarder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyForwarder__factory {
    return super.connect(runner) as MyForwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyForwarderInterface {
    return new Interface(_abi) as MyForwarderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyForwarder {
    return new Contract(address, _abi, runner) as unknown as MyForwarder;
  }
}
